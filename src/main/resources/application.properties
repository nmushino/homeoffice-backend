# Locations
%dev.locations=${STORE_LOCATIONS}
%test.locations=ATLANTA,RALEIGH,CHARLOTTE
%prod.locations=${STORE_LOCATIONS}

# Datasource
quarkus.datasource.db-kind=postgresql

%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/homeofficedb
%dev.quarkus.hibernate-orm.database.default-schema=receipts
# %test.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/coffeeshopdb?currentSchema=coffeeshop
quarkus.datasource.jdbc.max-size=16
%dev.quarkus.datasource.username=homeofficeuser
%dev.quarkus.datasource.password=redhat-21
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

%prod.quarkus.datasource.jdbc.url=${POSTGRESQL_JDBC_URL}
%prod.quarkus.datasource.username=${POSTGRESQL_USER}
%prod.quarkus.datasource.password=${POSTGRESQL_PASSWORD}

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.hibernate-orm.log.sql=false
#quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.default-schema=coffeeshop
quarkus.hibernate-orm.database.generation.create-schemas=true

# Logging
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
#quarkus.log.console.format=%-5p [%c{2.}] (%t) %s%e%n
quarkus.log.level=INFO
quarkus.log.category."io.quarkuscoffeeshop".level=DEBUG

#allow CORS
quarkus.http.cors=true
quarkus.http.port=8080

## Orders
mp.messaging.incoming.orders-created.connector=smallrye-kafka
mp.messaging.incoming.orders-created.topic=orders-created
mp.messaging.incoming.orders-created.value.deserializer=io.quarkuscoffeeshop.homeoffice.infrastructure.IngressOrderDeserializer
%dev.mp.messaging.incoming.orders-created.bootstrap.servers=localhost:9092
mp.messaging.incoming.orders-created.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}

mp.messaging.incoming.orders-updated.connector=smallrye-kafka
mp.messaging.incoming.orders-updated.topic=orders-updated
mp.messaging.incoming.orders-updated.value.deserializer=io.quarkuscoffeeshop.homeoffice.infrastructure.IngressOrderDeserializer
%dev.mp.messaging.incoming.orders-updated.bootstrap.servers=localhost:9092
mp.messaging.incoming.orders-updated.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}

mp.messaging.incoming.loyalty-member-purchase.connector=smallrye-kafka
mp.messaging.incoming.loyalty-member-purchase.topic=loyalty-member-purchase
mp.messaging.incoming.loyalty-member-purchase.value.deserializer=io.quarkuscoffeeshop.homeoffice.infrastructure.IngressOrderDeserializer
%dev.mp.messaging.incoming.loyalty-member-purchase.bootstrap.servers=localhost:9092
mp.messaging.incoming.loyalty-member-purchase.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}

